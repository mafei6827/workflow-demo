# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: deploy to bos repo

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Enforce snapshot
      run: mvn -P bos-deploy-snapshot enforcer:enforce --file pom.xml

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Set up BoS maven repo
      uses: actions/setup-java@v3
      with: # running setup-java again overwrites the settings.xml
        java-version: '17'
        distribution: 'temurin'
        server-id: bos-repo # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: BOS_REPO_AK # env variable for username in deploy
        server-password: BOS_REPO_SK # env variable for token in deploy

    - name: Publish to BoS maven repo
      run: mvn clean deploy -P bos-deploy-snapshot -pl module1,module2 -am -Dbos.repo.release=$BOS_REPO_RELEASE -Dbos.repo.snapshot=$BOS_REPO_SNAPSHOT
      env:
        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
        MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
        BOS_REPO_AK: ${{ secrets.BOS_REPO_AK }}
        BOS_REPO_SK: ${{ secrets.BOS_REPO_SK }}
        BOS_REPO_RELEASE: ${{ secrets.BOS_REPO_RELEASE }}
        BOS_REPO_SNAPSHOT: ${{ secrets.BOS_REPO_SNAPSHOT }}
